// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesWeb.Data;

#nullable disable

namespace MoviesWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230609204213_addMovieToDatabase")]
    partial class addMovieToDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoviesWeb.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("GenreTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 6, 9, 21, 42, 13, 738, DateTimeKind.Local).AddTicks(436),
                            Description = "A popular movie genre characterised by thrilling, high-energy and adrenaline-pumping content.",
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 6, 9, 21, 42, 13, 738, DateTimeKind.Local).AddTicks(454),
                            Description = "A genre of film that aims to entertain and amuse the audience through humor and light-hearted storytelling.",
                            Name = "Comedy"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 6, 9, 21, 42, 13, 738, DateTimeKind.Local).AddTicks(455),
                            Description = "A genre of film that explores imaginative and speculative concepts often based on scientific and technological advancements.",
                            Name = "Sci-Fi"
                        });
                });

            modelBuilder.Entity("MoviesWeb.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovieTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A movie which revolves around the life of Scott Howard, a high school student who discovers he is a werewolf and has to deal with the challenges of balancing his newfound abilities with his everyday teenage life.",
                            Director = "Rod Daniel",
                            Rating = 8.0m,
                            ReleaseDate = new DateTime(2011, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Teen Wolf"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The series follows Barry Allen, a forensic scientist who gains superhuman speed after being struck by lightning and being exposed to chemicals in his lab.",
                            Director = "Greg Berlanti, Geoff Johns $ Andrew Kreisberg",
                            Rating = 8.5m,
                            ReleaseDate = new DateTime(2014, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Flash"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The series depicts the life, challenges and experiences of a young Chris Rock, growing up in the 1980s in a predominantly African-American neighbourhood of Brooklyn, New York.",
                            Director = "Chris Rock & Ali LeRoi",
                            Rating = 9.0m,
                            ReleaseDate = new DateTime(2009, 5, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Everybody Hates Chris"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
